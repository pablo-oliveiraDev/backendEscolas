// Generated by CodiumAI

import { Request, Response } from "express";
import { UpdateNotasController } from "../../controllers/notas/UpdateNotasController";
import { prismaClient } from '../../database/prismaClient';

describe('UpdateNotasController', () => {
    // Test that the handle method of the UpdateNotasController class returns a success message with status code 201
    it('should return a success message with status code 201 when updating notas', async () => {
        // Mock request and response objects
        const request = {
            body: {
                bimMod: 1,
                desempenho: 'good',
                nota: 90,
            },
            params: {
                id: '1',
            },
        } as unknown as Request;
        const response = {
            status: jest.fn().mockReturnThis(),
            json: jest.fn(),
        } as unknown as Response;
        //mock method update
        prismaClient.nota.update = jest.fn().mockResolvedValue({});
        // Call the handle method
        const updateNotasController = new UpdateNotasController();
        await updateNotasController.handle(request, response);

        // Check if the response status and json methods were called with the correct arguments
        expect(response.status).toHaveBeenCalledWith(201);
        expect(response.json).toHaveBeenCalledWith({ msg: "Notas atualizadas com sucesso!" });
        expect(prismaClient.nota.update).toHaveBeenCalledWith({
            where: {
                id: 1,
            },
            data: {
                bimMod: 1,
                desempenho: 'good',
                nota: 90,
            },
        });
    });
});



