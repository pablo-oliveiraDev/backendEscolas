// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TipoDePessoa {
  id                  Int                   @id @default(autoincrement())
  pessoa              String
  created_at          DateTime              @default(now())
  pessoaDadosEscolar  PessoaDadosEscolar[]
  PessoaDadosPessoais PessoaDadosPessoais[]

  @@map("tipoDePessoas")
}

model DadosDocumento {
  id                  Int                   @id @default(autoincrement())
  nome                String
  Sobrenome           String
  email               String
  Cpf                 String
  Rg                  String
  idade               Int
  dataNascimento      String
  statusCadastro      Boolean
  tel                 String
  created_at          DateTime              @default(now())
  deleted_at          String
  pessoaDadosEscolar  PessoaDadosEscolar[]
  pessoaDadosPessoais PessoaDadosPessoais[]

  @@map("dadosDocumentos")
}

model Endereco {
  id                  Int                   @id @default(autoincrement())
  cep                 String
  rua                 String
  bairro              String
  cidade              String
  numero              Int
  complemento         String
  pessoaDadosEscolar  PessoaDadosEscolar[]
  pessoaDadosPessoais PessoaDadosPessoais[]

  @@map("enderecos")
}

model Especilidade {
  id                 Int                  @id @default(autoincrement())
  especialidade      String
  tipoDePessoaId     Int
  idEndereco         Int
  idDadosPessoais    Int
  pessoaDadosEscolar PessoaDadosEscolar[]

  @@map("especialidades")
}

model PagtoMes {
  id                  Int                   @id @default(autoincrement())
  valor               Decimal               @db.Decimal(10, 2)
  dataPagto           String?
  dataVencimento      String
  status              Boolean               @default(false)
  pessoaDadosPessoais PessoaDadosPessoais[]

  @@map("pagtosMes")
}

model Disciplina {
  id              Int    @id @default(autoincrement())
  nome            String
  tipoDePessoaId  Int
  idEndereco      Int
  idDadosPessoais Int

  pessoaDadosEscolar PessoaDadosEscolar[]

  @@map("disciplinas")
}

model Turma {
  id              Int    @id @default(autoincrement())
  nome            String
  tipoDePessoaId  Int
  idEndereco      Int
  idDadosPessoais Int

  pessoaDadosEscolar PessoaDadosEscolar[]

  @@map("turmas")
}

model Horario {
  id                 Int                  @id @default(autoincrement())
  diasSemana         String
  horaInicio         String
  horaFim            String
  tipoDePessoaId     Int
  idEndereco         Int
  idDadosPessoais    Int
  pessoaDadosEscolar PessoaDadosEscolar[]

  @@map("horarios")
}

model Presenca {
  id                 Int                  @id @default(autoincrement())
  presente           Boolean
  tipoDePessoaId     Int
  idEndereco         Int
  idDadosPessoais    Int
  pessoaDadosEscolar PessoaDadosEscolar[]

  @@map("presencas")
}

model Nota {
  id                 Int                  @id @default(autoincrement())
  bimMod             Int
  nota               Int
  desempenho         String
  tipoDePessoaId     Int
  idEndereco         Int
  idDadosPessoais    Int
  pessoaDadosEscolar PessoaDadosEscolar[]

  @@map("notas")
}

//relacionamentos

model PessoaDadosPessoais {
  id                Int             @id @default(autoincrement())
  tipoDePessoaId    Int?
  tipoDePessoa      TipoDePessoa?   @relation(fields: [tipoDePessoaId], references: [id])
  idEndereco        Int?
  endereco          Endereco?       @relation(fields: [idEndereco], references: [id])
  dadosDocumentosId Int?
  dadosDocumentos   DadosDocumento? @relation(fields: [dadosDocumentosId], references: [id])
  idPagto           Int?
  pagtoMes          PagtoMes?       @relation(fields: [idPagto], references: [id])

  @@map("pessoasDadosPessoais")
}

model PessoaDadosEscolar {
  id               Int            @id @default(autoincrement())
  tipoDePessoaId   Int
  tipoDePessoa     TipoDePessoa   @relation(fields: [tipoDePessoaId], references: [id])
  idEndereco       Int
  endereco         Endereco       @relation(fields: [idEndereco], references: [id])
  idDadosDocumento Int
  dadosDocumento   DadosDocumento @relation(fields: [idDadosDocumento], references: [id])
  idDisciplina     Int?
  disciplina       Disciplina?    @relation(fields: [idDisciplina], references: [id])
  idTurma          Int?
  turma            Turma?         @relation(fields: [idTurma], references: [id])
  idHorario        Int?
  horario          Horario?       @relation(fields: [idHorario], references: [id])
  idPresenca       Int?
  presenca         Presenca?      @relation(fields: [idPresenca], references: [id])
  idNota           Int?
  nota             Nota?          @relation(fields: [idNota], references: [id])
  idEspecialidade  Int?
  especialidade    Especilidade?  @relation(fields: [idEspecialidade], references: [id])

  @@map("pessoasDadosEscolares")
}
